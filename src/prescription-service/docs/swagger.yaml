basePath: /prescription-service
definitions:
  req.PrescriptionCreateReq:
    properties:
      appointment_id:
        type: string
      doctor_id:
        type: string
      dosage:
        type: string
      drug_name:
        type: string
      instruction:
        type: string
      patient_id:
        type: string
      status:
        enum:
        - not_collected
        - collected
        type: string
    required:
    - appointment_id
    - doctor_id
    - dosage
    - drug_name
    - patient_id
    type: object
  res.PrescriptionDetailRes:
    properties:
      appointment_id:
        type: string
      created_at:
        type: string
      doctor_id:
        type: string
      dosage:
        type: string
      drug_name:
        type: string
      id:
        type: string
      instruction:
        type: string
      patient_id:
        type: string
      status:
        type: string
    type: object
  response.ResErr:
    properties:
      errors:
        items:
          type: string
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ResOk:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:3080
info:
  contact: {}
  description: API documentation for Hospital Microservice
  title: Hospital Microservice API
  version: "1.0"
paths:
  /prescription-service/prescriptions:
    post:
      consumes:
      - application/json
      description: Create a new prescription
      parameters:
      - description: Prescription Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/req.PrescriptionCreateReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.ResOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Create prescription
      tags:
      - prescription
  /prescription-service/prescriptions/{id}:
    get:
      consumes:
      - application/json
      description: Retrieve details of a prescription by ID
      parameters:
      - description: Prescription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.PrescriptionDetailRes'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Get prescription details
      tags:
      - prescription
securityDefinitions:
  BearerAuth:
    description: Type "Bearer {your-token}"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

basePath: /prescription-service
definitions:
  provider.UserRes:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      phone:
        type: string
      role:
        type: string
    type: object
  req.MedicationCreateReq:
    properties:
      description:
        type: string
      drug_name:
        type: string
      stock:
        type: integer
      unit:
        enum:
        - tablet
        - capsule
        - syrup
        - injection
        - ointment
        - drop
        - inhaler
        - patch
        - suppository
        - other
        type: string
    required:
    - drug_name
    - stock
    - unit
    type: object
  req.MedicationUpdateReq:
    properties:
      description:
        type: string
      drug_name:
        type: string
      stock:
        type: integer
      unit:
        enum:
        - tablet
        - capsule
        - syrup
        - injection
        - ointment
        - drop
        - inhaler
        - patch
        - suppository
        - other
        type: string
    required:
    - unit
    type: object
  req.PrescriptionCreateReq:
    properties:
      doctor_id:
        type: string
      medications:
        items:
          $ref: '#/definitions/req.PrescriptionMedReq'
        type: array
      patient_id:
        type: string
      status:
        type: string
    required:
    - doctor_id
    - patient_id
    - status
    type: object
  req.PrescriptionMedReq:
    properties:
      dosage:
        type: string
      instruction:
        type: string
      issued_at:
        type: string
      medication_id:
        type: string
      quantity:
        type: integer
    required:
    - issued_at
    - medication_id
    - quantity
    type: object
  req.PrescriptionUpdateReq:
    properties:
      doctor_id:
        type: string
      id:
        type: string
      medications:
        items:
          $ref: '#/definitions/req.PrescriptionMedReq'
        type: array
      patient_id:
        type: string
      status:
        type: string
    required:
    - id
    type: object
  res.MedicationRes:
    properties:
      description:
        type: string
      drug_name:
        type: string
      id:
        type: string
      stock:
        type: integer
      unit:
        type: string
    type: object
  res.PrescriptionMedRes:
    properties:
      dosage:
        type: string
      id:
        type: string
      instruction:
        type: string
      issued_at:
        type: string
      medication_id:
        type: string
      quantity:
        type: integer
    type: object
  res.PrescriptionRes:
    properties:
      created_at:
        type: string
      doctor:
        $ref: '#/definitions/provider.UserRes'
      doctor_id:
        type: string
      id:
        type: string
      medications:
        items:
          $ref: '#/definitions/res.PrescriptionMedRes'
        type: array
      patient:
        $ref: '#/definitions/provider.UserRes'
      patient_id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  response.ResErr:
    properties:
      errors:
        items:
          type: string
        type: array
      message:
        type: string
      status:
        type: string
    type: object
  response.ResOk:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:3080
info:
  contact: {}
  description: API documentation for Hospital Microservice
  title: Hospital Microservice API
  version: "1.0"
paths:
  /medication/create:
    post:
      consumes:
      - application/json
      description: Create a new medication record
      parameters:
      - description: Medication Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/req.MedicationCreateReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.ResOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Create Medication
      tags:
      - medication
  /medication/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a medication record
      parameters:
      - description: Medication ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Delete Medication
      tags:
      - medication
  /medication/detail/{id}:
    get:
      consumes:
      - application/json
      description: Detail a medication record
      parameters:
      - description: Medication ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.MedicationRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Detail Medication
      tags:
      - medication
  /medication/filter:
    get:
      consumes:
      - application/json
      description: List all medication records with pagination & filter
      parameters:
      - description: Limit per page
        in: query
        name: limit
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Sort (e.g. drug_name asc)
        in: query
        name: sort
        type: string
      - description: Filter by drug name
        in: query
        name: drug_name
        type: string
      - description: Filter by unit
        in: query
        name: unit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: List Medications with pagination & filter
      tags:
      - medication
  /medication/update/{id}:
    patch:
      consumes:
      - application/json
      description: Update a medication record
      parameters:
      - description: Medication ID
        in: path
        name: id
        required: true
        type: string
      - description: Medication Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/req.MedicationUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.MedicationRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Update Medication
      tags:
      - medication
  /prescription/create:
    post:
      consumes:
      - application/json
      description: Create a new prescription
      parameters:
      - description: Prescription Create Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/req.PrescriptionCreateReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.ResOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Create prescription
      tags:
      - prescription
  /prescription/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a prescription record
      parameters:
      - description: Prescription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Delete Prescription
      tags:
      - prescription
  /prescription/detail/{id}:
    get:
      consumes:
      - application/json
      description: Get a prescription detail record
      parameters:
      - description: Prescription ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.PrescriptionRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Get Prescription Detail
      tags:
      - prescription
  /prescription/filter:
    get:
      consumes:
      - application/json
      description: Filter all prescriptions records with pagination & filters
      parameters:
      - description: Limit per page
        in: query
        name: limit
        type: integer
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Sort (e.g. id asc)
        in: query
        name: sort
        type: string
      - description: Filter by patient ID
        in: query
        name: patient_id
        type: string
      - description: Filter by doctor ID
        in: query
        name: doctor_id
        type: string
      - description: Filter by status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Filter Prescriptions with pagination & filters
      tags:
      - prescription
  /prescription/update/{id}:
    patch:
      consumes:
      - application/json
      description: Update a prescription record
      parameters:
      - description: Prescription ID
        in: path
        name: id
        required: true
        type: string
      - description: Prescription Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/req.PrescriptionUpdateReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResOk'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ResErr'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ResErr'
      security:
      - BearerAuth: []
      summary: Update Prescription
      tags:
      - prescription
securityDefinitions:
  BearerAuth:
    description: Type "Bearer {your-token}"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
